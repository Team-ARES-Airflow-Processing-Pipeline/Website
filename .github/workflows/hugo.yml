# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: Deploy Hugo site to Pages

on:
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.110.0
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
      - name: Install Dart Sass Embedded
        run: sudo snap install dart-sass-embedded
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Build with Hugo
        env:
          # For maximum backward compatibility with Hugo modules
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: "hugo --minify"
      - name: Zip public folder
        run: "sudo apt install -y zip unzip; zip -r public.zip ./public/*"
      - name: Generate release tag
        id: tag
        run: |
          echo "::set-output name=release_tag::UserBuild_$(date +"%Y.%m.%d_%H-%M")"
      - name: Deploy to Releases
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.release_tag }}
          files: public.zip
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download release artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: hugo.yml
          workflow_conclusion: success
          name: public.zip
          path: public.zip
      - name: Login to openconnect vpn
        run: |
          sudo apt install -y openconnect
          sudo openconnect --user=$VPN_USERNAME --passwd-on-stdin $VPN_URL < <(echo $VPN_PASSWORD)
      - name: Upload to server
        run: |
          sudo apt install -y unzip
          unzip public.zip -d public
          rsync -avz --delete public/ $SERVER_USER@$SERVER_IP:$SERVER_PATH


      